.
├── artifacts
│   ├── package.json
│   ├── pagila
│   │   ├── pagila-data.sql
│   │   ├── pagila-schema.sql
│   │   └── README.md
│   ├── pagila-master
│   │   ├── docker-compose.yml
│   │   ├── LICENSE.txt
│   │   ├── pagila-data-apt-jsonb.backup
│   │   ├── pagila-data.sql
│   │   ├── pagila-data-yum-jsonb.backup
│   │   ├── pagila-insert-data.sql
│   │   ├── pagila-schema-diagram.png
│   │   ├── pagila-schema-jsonb.sql
│   │   ├── pagila-schema.sql
│   │   ├── pgadmin
│   │   │   ├── pgadmin_pass
│   │   │   └── pgadmin_servers.json
│   │   ├── README.md
│   │   └── restore-pagila-data-jsonb.sh
│   ├── rabbit_fedora_2025-5-23.json
│   └── rabbitmq_config.json
├── bestinf.sh
├── bestinf.txt
├── Cargo.lock
├── Cargo.toml
├── check.txt
├── dwt.sh
├── egui-components
│   ├── Cargo.toml
│   ├── .gitignore
│   ├── README.md
│   └── src
│       ├── border_layout.rs
│       ├── event_tree.rs
│       ├── lib.rs
│       ├── tree_node_id.rs
│       ├── tree.rs
│       └── tree_vis
│           ├── mod.rs
│           ├── topology.rs
│           └── tree_view.rs
├── find_rust_files.sh
├── .gitignore
├── .idea
│   ├── dataSources
│   │   ├── 3e6a8089-6d64-4450-8405-24033cb146d1
│   │   │   └── storage_v2
│   │   │       └── _src_
│   │   │           └── database
│   │   │               ├── postgres.edMnLQ
│   │   │               │   └── schema
│   │   │               │       ├── information_schema.FNRwLQ.meta
│   │   │               │       ├── pg_catalog.0S1ZNQ.meta
│   │   │               │       └── public.abK9xQ.meta
│   │   │               └── postgres.edMnLQ.meta
│   │   └── 3e6a8089-6d64-4450-8405-24033cb146d1.xml
│   ├── dataSources.local.xml
│   ├── dataSources.xml
│   ├── .gitignore
│   ├── modules.xml
│   ├── rabbitmq_workspace.iml
│   ├── sqldialects.xml
│   ├── vcs.xml
│   └── workspace.xml
├── messaging_cli
│   ├── Cargo.toml
│   └── src
│       └── main.rs
├── messaging_commands
│   ├── Cargo.toml
│   ├── README.md
│   └── src
│       ├── client
│       │   └── mod.rs
│       ├── clients
│       │   ├── amqp
│       │   │   └── mod.rs
│       │   ├── mod.rs
│       │   ├── mqtt
│       │   │   └── mod.rs
│       │   └── stomp
│       │       └── mod.rs
│       ├── common
│       │   └── mod.rs
│       ├── config
│       │   └── mod.rs
│       ├── error.rs
│       ├── lib.rs
│       ├── main.rs
│       ├── protocol
│       │   └── mod.rs
│       ├── tests
│       │   └── mod.rs
│       ├── traits
│       │   └── mod.rs
│       ├── utils
│       │   └── mod.rs
│       └── version
│           └── mod.rs
├── pg_vault
│   ├── Cargo.toml
│   ├── check_psql.sh
│   ├── justpost.sh
│   ├── sql
│   │   ├── 01_create_schema.sql
│   │   ├── 02_create_tables.sql 
│   │   ├── 03_sample_data.sql
│   │   └── northwind
│   └── src
│       ├── auth
│       │   ├── mock.rs
│       │   ├── mod.rs
│       │   └── yubikey.rs
│       ├── lib.rs
│       ├── main.rs
│       └── vault
│           ├── connection.rs
│           └── mod.rs
├── rabbitmq-config
│   ├── Cargo.toml
│   ├── config.tree
│   ├── .gitignore
│   ├── README.md
│   ├── src
│   │   ├── client.rs
│   │   ├── config.rs
│   │   ├── error.rs
│   │   ├── lib.rs
│   │   ├── models.rs
│   │   └── topology.rs
│   └── tests
│       ├── client
│       │   ├── integration_tests.rs
│       │   ├── mocked_tests.rs
│       │   └── unit_tests.rs
│       ├── common
│       │   └── test_utils.rs
│       ├── config
│       │   ├── manipulation_tests.rs
│       │   ├── rabbitmq_def_tests.rs
│       │   ├── serialization_tests.rs
│       │   └── validation_tests.rs
│       ├── connection_test.rs
│       ├── fixtures
│       │   └── sample_config
│       ├── lib.rs
│       └── simple_connection_test.rs
├── rabbitmq-info
│   ├── Cargo.toml
│   └── src
│       ├── api
│       │   └── mod.rs
│       ├── collector
│       │   └── mod.rs
│       ├── export
│       │   └── mod.rs
│       └── lib.rs
├── rabbitmq-ui
│   ├── Cargo.toml
│   ├── .gitignore
│   └── src
│       ├── app.rs
│       ├── connection
│       │   ├── config.rs
│       │   └── mod.rs
│       ├── exchanges
│       │   ├── create.rs
│       │   ├── list.rs
│       │   └── mod.rs
│       ├── main.rs
│       ├── messages
│       │   ├── consume.rs
│       │   ├── mod.rs
│       │   └── publish.rs
│       └── queues
│           ├── create.rs
│           ├── list.rs
│           └── mod.rs
├── README.md
├── tests
│   ├── client
│   │   ├── integration_tests.rs
│   │   ├── mocked_tests,rs
│   │   └── unit_tests.rs
│   ├── common
│   ├── config
│   ├── fixtures
│   │   └── sample_configs
│   ├── integration_test.rs
│   └── lib.rs
├── traverse_projects.sh
└── yak_json
    ├── 2cbuild.txt
    ├── Cargo.toml
    ├── cbuild.txt
    ├── src
    │   └── main.rs
    └── test.json

65 directories, 136 files
-rw-r--r--. 1 dweese dweese    465 Jun 17 22:56 ./Cargo.toml
-rw-r--r--. 1 dweese dweese    368 May 21 10:38 ./egui-components/Cargo.toml
-rw-r--r--. 1 dweese dweese   7814 May 13 20:53 ./egui-components/src/border_layout.rs
-rw-r--r--. 1 dweese dweese   5899 May 26 18:27 ./egui-components/src/event_tree.rs
-rw-r--r--. 1 dweese dweese    256 May 22 18:56 ./egui-components/src/lib.rs
-rw-r--r--. 1 dweese dweese   1641 May 21 10:35 ./egui-components/src/tree_node_id.rs
-rw-r--r--. 1 dweese dweese   4900 May 26 18:28 ./egui-components/src/tree.rs
-rw-r--r--. 1 dweese dweese     37 May 21 17:55 ./egui-components/src/tree_vis/mod.rs
-rw-r--r--. 1 dweese dweese   5664 May 22 19:29 ./egui-components/src/tree_vis/topology.rs
-rw-r--r--. 1 dweese dweese      0 May 21 17:56 ./egui-components/src/tree_vis/tree_view.rs
-rw-r--r--. 1 dweese dweese    357 Jun  8 18:26 ./messaging_cli/Cargo.toml
-rw-r--r--. 1 dweese dweese   2370 Jun  8 19:57 ./messaging_cli/src/main.rs
-rw-r--r--. 1 dweese dweese    389 Jun  4 19:22 ./messaging_commands/Cargo.toml
-rw-r--r--. 1 dweese dweese   1560 Jun  3 22:19 ./messaging_commands/src/client/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:19 ./messaging_commands/src/clients/amqp/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:19 ./messaging_commands/src/clients/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:19 ./messaging_commands/src/clients/mqtt/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:19 ./messaging_commands/src/clients/stomp/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:19 ./messaging_commands/src/common/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:50 ./messaging_commands/src/config/mod.rs
-rw-r--r--. 1 dweese dweese    448 Jun  3 22:21 ./messaging_commands/src/error.rs
-rw-r--r--. 1 dweese dweese   1913 Jun  4 20:13 ./messaging_commands/src/lib.rs
-rw-r--r--. 1 dweese dweese   2908 Jun  3 22:24 ./messaging_commands/src/main.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:50 ./messaging_commands/src/protocol/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:19 ./messaging_commands/src/tests/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:50 ./messaging_commands/src/traits/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:50 ./messaging_commands/src/utils/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 28 17:50 ./messaging_commands/src/version/mod.rs
-rw-r--r--. 1 dweese dweese    495 Jun 18 19:10 ./pg_vault/Cargo.toml
-rw-r--r--. 1 dweese dweese  11088 Jun 19 23:39 ./pg_vault/src/auth/mock.rs
-rw-r--r--. 1 dweese dweese   6530 Jun 19 23:38 ./pg_vault/src/auth/mod.rs
-rw-r--r--. 1 dweese dweese   8479 Jun 19 23:46 ./pg_vault/src/auth/yubikey.rs
-rw-r--r--. 1 dweese dweese   1008 Jun 19 23:41 ./pg_vault/src/lib.rs
-rw-r--r--. 1 dweese dweese   5263 Jun 22 23:04 ./pg_vault/src/main.rs
-rw-r--r--. 1 dweese dweese  15764 Jun 19 23:59 ./pg_vault/src/vault/connection.rs
-rw-r--r--. 1 dweese dweese  16654 Jun 19 23:56 ./pg_vault/src/vault/mod.rs
-rw-r--r--. 1 dweese dweese    566 May 27 17:55 ./rabbitmq-config/Cargo.toml
-rw-r--r--. 1 dweese dweese  10388 May 31 17:39 ./rabbitmq-config/src/client.rs
-rw-r--r--. 1 dweese dweese   9247 May 27 17:53 ./rabbitmq-config/src/config.rs
-rw-r--r--. 1 dweese dweese    831 May 23 20:41 ./rabbitmq-config/src/error.rs
-rw-r--r--. 1 dweese dweese    796 May 27 11:09 ./rabbitmq-config/src/lib.rs
-rw-r--r--. 1 dweese dweese   4986 May 27 11:34 ./rabbitmq-config/src/models.rs
-rw-r--r--. 1 dweese dweese   1642 May 27 11:19 ./rabbitmq-config/src/topology.rs
-rw-r--r--. 1 dweese dweese    498 May 20 22:11 ./rabbitmq-config/tests/client/integration_tests.rs
-rw-r--r--. 1 dweese dweese    272 May 20 22:11 ./rabbitmq-config/tests/client/mocked_tests.rs
-rw-r--r--. 1 dweese dweese   1125 May 23 17:40 ./rabbitmq-config/tests/client/unit_tests.rs
-rw-r--r--. 1 dweese dweese   1373 May 27 18:00 ./rabbitmq-config/tests/common/test_utils.rs
-rw-r--r--. 1 dweese dweese      0 May 20 22:11 ./rabbitmq-config/tests/config/manipulation_tests.rs
-rw-r--r--. 1 dweese dweese   2074 May 27 11:04 ./rabbitmq-config/tests/config/rabbitmq_def_tests.rs
-rw-r--r--. 1 dweese dweese    885 May 27 11:46 ./rabbitmq-config/tests/config/serialization_tests.rs
-rw-r--r--. 1 dweese dweese    801 May 27 12:37 ./rabbitmq-config/tests/config/validation_tests.rs
-rw-r--r--. 1 dweese dweese   1028 May 20 22:11 ./rabbitmq-config/tests/connection_test.rs
-rw-r--r--. 1 dweese dweese    398 May 20 22:11 ./rabbitmq-config/tests/lib.rs
-rw-r--r--. 1 dweese dweese    817 May 20 22:11 ./rabbitmq-config/tests/simple_connection_test.rs
-rw-r--r--. 1 dweese dweese    380 May 22 22:03 ./rabbitmq-info/Cargo.toml
-rw-r--r--. 1 dweese dweese   2981 May 22 21:14 ./rabbitmq-info/src/api/mod.rs
-rw-r--r--. 1 dweese dweese   6233 May 23 05:53 ./rabbitmq-info/src/collector/mod.rs
-rw-r--r--. 1 dweese dweese   3698 May 22 21:49 ./rabbitmq-info/src/export/mod.rs
-rw-r--r--. 1 dweese dweese   1971 May 28 17:59 ./rabbitmq-info/src/lib.rs
-rw-r--r--. 1 dweese dweese    393 May 26 19:03 ./rabbitmq-ui/Cargo.toml
-rw-r--r--. 1 dweese dweese  20838 May 27 18:12 ./rabbitmq-ui/src/app.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:58 ./rabbitmq-ui/src/connection/config.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:58 ./rabbitmq-ui/src/connection/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:59 ./rabbitmq-ui/src/exchanges/create.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:59 ./rabbitmq-ui/src/exchanges/list.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:59 ./rabbitmq-ui/src/exchanges/mod.rs
-rw-r--r--. 1 dweese dweese  21435 May 27 18:18 ./rabbitmq-ui/src/main.rs
-rw-r--r--. 1 dweese dweese      0 May 14 16:00 ./rabbitmq-ui/src/messages/consume.rs
-rw-r--r--. 1 dweese dweese      0 May 14 16:00 ./rabbitmq-ui/src/messages/mod.rs
-rw-r--r--. 1 dweese dweese      0 May 14 16:00 ./rabbitmq-ui/src/messages/publish.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:59 ./rabbitmq-ui/src/queues/create.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:59 ./rabbitmq-ui/src/queues/list.rs
-rw-r--r--. 1 dweese dweese      0 May 14 15:58 ./rabbitmq-ui/src/queues/mod.rs
-rw-r--r--. 1 dweese dweese  35510 Jun 24 23:13 ./target/debug/build/oid-registry-f54b0134b64bc69c/out/oid_db.rs
-rw-r--r--. 1 dweese dweese 622641 Jun 24 23:13 ./target/debug/build/typenum-4d45f54f451f066b/out/tests.rs
-rw-r--r--. 1 dweese dweese      0 May 20 22:11 ./tests/client/integration_tests.rs
-rw-r--r--. 1 dweese dweese   4924 May 20 22:11 ./tests/client/unit_tests.rs
-rw-r--r--. 1 dweese dweese    845 May 23 05:20 ./tests/integration_test.rs
-rw-r--r--. 1 dweese dweese    400 May 20 22:11 ./tests/lib.rs
-rw-r--r--. 1 dweese dweese    334 Jun 16 21:57 ./yak_json/Cargo.toml
-rw-r--r--. 1 dweese dweese  11573 Jun 16 22:04 ./yak_json/src/main.rs
[workspace]
members = [
    "rabbitmq-config",
    "rabbitmq-info",
    "rabbitmq-ui",
    "egui-components",
    "messaging_commands", "messaging_cli", "yak_json", "pg_vault"]

resolver = "2"


[workspace.dependencies]
rabbitmq-config = { path = "./rabbitmq-config" }
rabbitmq-info = { path = "./rabbitmq-info" }
tokio = { version = "1", features = ["full", "rt", "macros"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
#### egui-components/Cargo.toml
[package]
name = "egui-components"
version = "0.1.0"
edition = "2021"

[dependencies]
# Use a direct reference to eframe with version instead of workspace
eframe = "0.24.1"
env_logger = "0.11.8"
tokio = "1.45.0"
serde = { version = "1.0.219", features = ["derive"] }
thiserror = "1.0.69"
serde_json = "1.0.140"
futures-util = "0.3.31"

[package]
name = "messaging_cli"
version = "0.1.0"
edition = "2021"

[dependencies]
# CLI dependencies
clap = { version = "4.0", features = ["derive"] }
env_logger = "0.10"
log = "0.4"

# Async runtime
tokio = { workspace = true }

# Local workspace dependencies
messaging_commands = { path = "../messaging_commands" }
rabbitmq-config = { workspace = true }[package]
name = "messaging_commands"
version = "0.1.0"
edition = "2021"

[dependencies]
rabbitmq-config = { path = "../rabbitmq-config" }
thiserror = "1.0"
tokio = { version = "1.45.0", features = ["full"] }
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"
log = "0.4.27"
lapin = "2.5.3"
percent-encoding = "2.3.1"
tokio-executor-trait = "2.1.0"


[features]
[package]
name = "pg_vault"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "pg_vault"
path = "src/main.rs"

[dependencies]
tokio = { version = "1.0", features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
thiserror = "1.0"
tokio-postgres = "0.7"
sha2 = "0.10"
base64 = "0.21"

# Hardware Yubikey support (optional)
yubico = { version = "0.11", optional = true }
chrono = "0.4.41"

[features]
default = []
hardware-yubikey = ["yubico"]

[dev-dependencies]
tokio-test = "0.4"## rabbitmq-config/Cargo.toml

[package]
name = "rabbitmq-config"
version = "0.1.0"
edition = "2021"

[dependencies]
serde = { version = "1.0", features = ["derive"] }
tokio-executor-trait = "2.1.1"

serde_json = "1.0"

tokio = { version = "1", features = ["full"] }
lapin = "2.5.3"
thiserror = "1.0"
futures-util = "0.3.31"
# Use version 7.2.3 which is compatible with lapin 2.5.3
amq-protocol-uri = "7.2.3"
percent-encoding = "2.3.1"
log = "0.4.27"
sha2 = "0.10.9"
rand = "0.8.5"  # Change from 0.9.1 to 0.8.5
base64 = "0.21.5"  # Change from 0.22.1 to 0.21.5




## rabbitmq-info/Cargo.toml
[package]
name = "rabbitmq-info"
version = "0.1.0"
edition = "2021"

[dependencies]
rabbitmq-config = { path = "../rabbitmq-config" }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1", features = ["full", "rt", "macros"] }
thiserror = "1.0"
reqwest = { version = "0.11", features = ["json"] }
base64 = "0.21"## rabbitmq-ui/Cargo.toml
[package]
name = "rabbitmq-ui"
version = "0.1.0"
edition = "2021"

[dependencies]
rabbitmq-config = { path = "../rabbitmq-config" }
egui-components = { path = "../egui-components" }
eframe = "0.24.0"  # Replace with actual version you need
tokio = { version = "1", features = ["full"] }
env_logger = "0.11.8"
egui_extras = "0.24.0"  # Add this line for table support

[package]
name = "yak_json"
version = "0.1.0"
edition = "2021"

[dependencies]
serde = { workspace = true }
serde_json = { workspace = true }
eframe = "0.24.1"
egui-components = { path = "../egui-components" }
env_logger = "0.11.8"
log = "0.4"
rabbitmq-config = { workspace = true }
rfd = { version = "0.14" }  # Simple file dialog

==> egui-components/src/lib.rs <==
// egui-components/src/lib.rs
mod border_layout;
mod event_tree;
mod tree_node_id;
mod tree;
pub use border_layout::BorderLayout;
pub use tree::Tree;
pub use event_tree::{EventTree, TreeEvent, TreeNode};
pub use tree_node_id::TreeNodeId;
pub mod tree_vis;

==> messaging_commands/src/lib.rs <==
//! Messaging Commands Library
//! 
//! A comprehensive library for handling messaging operations with various protocols,
//! primarily focused on RabbitMQ connectivity and message handling.
//! 
//! # Quick Start
//! 
//! ```rust
//! use messaging_commands::prelude::*;
//! 
//! #[tokio::main]
//! async fn main() -> Result<(), MessagingError> {
//!     let config = RabbitMQConfig::new()
//!         .host("localhost")
//!         .port(5672);
//!     
//!     let client = RabbitMQClient::new(config).await?;
//!     // Use the client...
//!     Ok(())
//! }

==> pg_vault/src/lib.rs <==
// pg_vault/src/lib.rs
//! pg_vault - Secure PostgreSQL with Hardware Token Authentication
//!
//! A Rust library providing secure PostgreSQL connections with hardware token
//! authentication, specifically designed for Yubikey devices.

pub mod auth;
pub mod vault;

/// Re-exports for convenient importing
pub mod prelude {
    // Authentication types
    pub use crate::auth::{
        AuthConfig,
        AuthError,
        AuthResult,
        AuthProviderFactory,
        MockYubikey,
        TokenInfo,
        YubikeyAuth,

==> rabbitmq-config/src/lib.rs <==
// rabbitmq-config/src/lib.rs

use serde::{Serialize, Deserialize};

// Module declarations
mod client;
mod config;
mod error;
mod topology;
mod models;


// Re-exports of core types
pub use client::RabbitMQClient;
pub use config::RabbitMQConfig;
pub use error::RabbitMQError;

// Re-export the models needed by the UI
pub use models::{
    MessageProperties,

==> rabbitmq-info/src/lib.rs <==
// rabbitmq-info/src/lib.rs

// Import necessary dependencies
use serde::{Deserialize, Serialize};
use serde_json::Value;
use thiserror::Error;

// Define the modules
pub mod api;
pub mod collector;
pub mod export;
// Public modules
// Define all the modules that exist in your file system
pub mod client;
pub mod clients;
pub mod common;
pub mod config;
pub mod error;
pub mod protocol;
pub mod tests;  // This points to tests/mod.rs
